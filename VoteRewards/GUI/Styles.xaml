<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
	<SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
	<SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
	<SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
	<Style x:Key="ListBoxStyle1" TargetType="{x:Type ListBox}">
		<Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBox}">
					<Border x:Name="Bd" Padding="1" SnapsToDevicePixels="true" CornerRadius="8,8,8,8" Background="#FF989898" BorderBrush="Black" BorderThickness="2,2,2,2">
						<ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" OpacityMask="Black"/>
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsGrouping" Value="true"/>
								<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
							</MultiTrigger.Conditions>
							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style x:Key="FocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
	<SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
	<SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
	<SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
	<SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
	<SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
	<SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
	<SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
	<SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
	<Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
		<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true" CornerRadius="8,8,8,8" BorderThickness="2,2,2,2">
						<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsDefaulted" Value="true">
							<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
							<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
							<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
							<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
							<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- switch button -->
	<Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
		<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Width" Value="60"/>
		<Setter Property="Height" Value="20"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="border" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="20" VerticalAlignment="Top" Width="60" CornerRadius="10" Background="#FF17FF00">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CheckStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="border1">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
											<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF17FF00"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="border1">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="39"/>
										</DoubleAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
											<EasingColorKeyFrame KeyTime="0:0:0.3" Value="Red"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Indeterminate"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="border1" BorderBrush="Black" BorderThickness="1" CornerRadius="10" Margin="-1,-1,38,-1" Background="White" RenderTransformOrigin="0.5,0.5">
							<Border.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Border.RenderTransform>
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="Button.IsDefaulted" Value="true"/>
						<Trigger Property="IsMouseOver" Value="true"/>
						<Trigger Property="IsPressed" Value="true"/>
						<Trigger Property="IsEnabled" Value="false"/>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
